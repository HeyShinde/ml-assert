[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project]
name = "ml-assert"
version = "1.0.5"
description = "A comprehensive assertion-and-validation toolkit for ML workflows."
readme = "README.md"
requires-python = ">=3.12"
license = { file = "LICENSE" }
authors = [
    { name = "Shinde Aditya", email = "aditya@heyshinde.com" },
]
keywords = ["ml", "machine-learning", "testing", "validation", "assertion", "mlops"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Testing"
]
dependencies = [
    "pandas>=2.3.1,<3.0.0",
    "scikit-learn>=1.7.1,<2.0.0",
    "typer[all]>=0.16.0,<0.17.0",
    "pyyaml>=6.0.2,<7.0.0",
    "scipy>=1.16.0,<2.0.0",
    "mlflow>=3.1.1,<4.0.0",
    "prometheus_client>=0.22.0,<0.23.1",
    "shap>=0.48.0,<0.49.0"
]

[project.optional-dependencies]
notebooks = [
    "jupytext>=1.17.2,<2.0.0",
    "ipykernel>=6.29.5,<7.0.0"
]

[project.scripts]
ml-assert = "ml_assert.cli:app"

[project.entry-points."ml_assert.plugins"]
file_exists = "ml_assert.plugins.file_exists:FileExistsPlugin"
dvc_check = "ml_assert.plugins.dvc_check:DVCArtifactCheckPlugin"

[project.urls]
Homepage = "https://pybrainn.github.io/ml-assert/"
Repository = "https://github.com/pybrainn/ml-assert"
"Bug Tracker" = "https://github.com/pybrainn/ml-assert/issues"

[tool.poetry]
packages = [
    { include = "ml_assert", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.12"
mlflow = ">3.1.0,< 4.0.0"
pandas = ">=2.3.1,< 3.0.0"
scikit-learn = ">=1.7.1,<2.0.0"
scipy = ">=1.16.0,<2.0.0"
prometheus_client = ">=0.22.0,<0.23.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.0"
pre-commit = "^4.2.0"
pytest-cov = "^6.1.1"
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.14"
seaborn = ">=0.13.2,<0.14.0"
ruff = "^0.11.3"

[tool.pytest.ini_options]
minversion = "8.4.0"
addopts = "-ra -q"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["ml_assert"]

[tool.coverage.report]
show_missing = true
