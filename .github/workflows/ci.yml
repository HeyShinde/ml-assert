name: Python Package CI

on:
  push:
    branches: [main]
    tags:
      - 'v*'  # Triggers workflow on version tag pushes like v1.0.0
  pull_request:
    branches: [main]

jobs:
  validate-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: '2.1.3'

      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install

      - name: Lint with ruff
        run: poetry run ruff check .

      - name: Run tests
        run: poetry run pytest

      - name: Build package
        run: poetry build

      - name: Upload distribution files
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Build docs
        run: poetry run mkdocs build -f docs/mkdocs.yml

  publish-to-pypi:
    name: publish-to-pypi
    needs: [validate-and-build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: pypi
      url: https://pypi.org/p/ml-assert
    permissions:
      id-token: write

    steps:
      - name: Download distribution files
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  create-github-release:
    name: create-github-release
    needs: [validate-and-build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Download distribution files
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Build changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          configuration: ".github/changelog-config.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.build_changelog.outputs.changelog }}
          files: dist/*

  publish-to-github:
    name: publish-to-github
    needs: [validate-and-build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    env:
      PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: '2.1.3'
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Configure GitHub Packages Authentication
        run: |
          poetry config repositories.github https://pypi.pkg.github.com/${{ github.repository_owner }}/ml-assert
          poetry config http-basic.github __token__ ${{ secrets.GITHUB_TOKEN }}

      - name: Publish package to GitHub Packages
        run: poetry publish -r github -n

  publish-docs-to-gh-pages:
    name: publish-docs-to-gh-pages
    needs: [validate-and-build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    # Grant GITHUB_TOKEN the permissions required to deploy to GitHub Pages
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: '2.1.3'
      - name: Install dependencies
        run: poetry install
      - name: Build docs
        run: poetry run mkdocs build -f docs/mkdocs.yml
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
